<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprDebugWorld</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-999999999</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Readme

//This is the main controller object for the game!
//This should be created in exactly one spot - the first room of the game
//In this engine, that's rTitle.

//Destroy this object if there's already another one
show_debug_message(string(instance_number(world)));
if (instance_number(world)&gt;1) {
    show_debug_message("destroying world");
    instance_destroy();
}

timeCounter = 0; //counter for GUI
guiTimer=0; //time before GUI appears
guiOffset=0; //position of GUI
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///GUI
if (global.guiPosition &gt; 0) {
    var reset = keyboard_check_pressed(vk_anykey); //reset timer if any key is pressed
    if (instance_exists(player)) {
        reset |= ((player.x != player.xprevious) || (player.y != player.yprevious)); //reset timer if player is moving
    }
    if (reset) guiTimer = global.guiDelay;
} else {
    guiTimer=1; //force timer to always be one if gui is off, therefore never showing
}

if (guiTimer &gt; 0) { //if there's still time on the timer
    guiTimer-=1/room_speed; //tick it down and hide the gui
    guiOffset=0;
} else { //otherwise slide it in (mm)
    if (guiOffset&lt;32) {
        guiOffset+=1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Restart
if (keyboard_check_pressed(global.restartbutton)) {
    if (!isMenuRoom()) { //don't allow the player to restart in a menu room
        with (player) instance_destroy(); //destroy player to reset him
        saveGame(true); //save deathtime
        loadGame();
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Global Time
if (!isMenuRoom()) { //time doesn't run in menu rooms
    timeCounter += 1;
    if timeCounter = room_speed {
        global.time += 1;
        writeRoomCaption();
        timeCounter = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="113">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Restart Game

//Add rooms here if you don't want to save data
if (!isMenuRoom()) {
    saveGlobals();
    saveGame(true);
}
sound_stop_all();
room_goto(rTitle);
game_init();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Quit Game

quitGame();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>lastRoom=room;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_speed = 50; //50 FPS (DO NOT CHANGE)
musicFunctions(); //Change BGM on room start
display_set_gui_size(view_wview[0], view_hview[0]);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>game_init();

global.godmode=false; //Used in killPlayer script to determine if kid is invincible

sprite_index=noone; //remove sprite; it's set to visible so it can draw the GUI
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Deathtime overlay

if (!isMenuRoom()) {
    if (global.guiPosition &gt; 0) {
        draw_set_font(font12);
        if (global.guiPosition==2) {
            draw_set_alpha(0.25);
            draw_rectangle_colour(0,-32+guiOffset,view_wview,guiOffset,c_black,c_black,c_black,c_black,0);
            draw_set_alpha(1);
            draw_set_color(c_white);
            draw_set_halign(fa_left);
            draw_set_valign(fa_center);
            draw_text(64,-32+guiOffset+16,"Deaths: "+string(global.death));
            draw_set_halign(fa_right);
            draw_text(view_wview-64,-32+guiOffset+16,"Time: "+getTimeStr(global.time));
            draw_set_color(c_black);
        } else {
            draw_set_alpha(0.25);
            draw_rectangle_colour(0,view_hview-guiOffset,view_wview,view_hview+32-guiOffset,c_black,c_black,c_black,c_black,0);
            draw_set_alpha(1);
            draw_set_color(c_white);
            draw_set_halign(fa_left);
            draw_set_valign(fa_center);
            draw_text(64,view_hview+32-guiOffset-16,"Deaths: "+string(global.death));
            draw_set_halign(fa_right);
            draw_text(view_wview-64,view_hview+32-guiOffset-16,"Time: "+getTimeStr(global.time));
            draw_set_color(c_black);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="115">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Quit Game

//Alt+F4 support
if (keyboard_check_direct(vk_alt)) {
    quitGame();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
